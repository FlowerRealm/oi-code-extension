name: CI - 自动化测试

on:
  # 自动触发条件：代码变更时运行测试
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - 'webpack.config.js'
      - '.github/workflows/ci-test.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - 'webpack.config.js'
      - '.github/workflows/ci-test.yml'

jobs:
  # ===== 跨平台测试 =====
  test:
    name: '测试 (${{ matrix.os }})'
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13, ubuntu-24.04-arm, windows-arm64]
    runs-on: ${{ matrix.os }}
    environment: check
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: 删除系统自带编译器
        run: |
          echo "=== 删除系统自带编译器 ==="
          
          if [[ "${{ matrix.os }}" == *"ubuntu"* ]]; then
            echo "删除Ubuntu系统编译器..."
            sudo apt-get remove -y gcc g++ clang clang++ build-essential || true
            sudo apt-get autoremove -y
            echo "验证删除："
            which gcc g++ clang clang++ || echo "✅ 编译器已删除"
            
          elif [[ "${{ matrix.os }}" == *"macos"* ]]; then
            echo "删除macOS系统编译器..."
            # 删除Xcode命令行工具
            sudo rm -rf /Library/Developer/CommandLineTools 2>/dev/null || true
            # 删除Homebrew安装的编译器
            brew uninstall llvm gcc 2>/dev/null || true
            echo "验证删除："
            which gcc g++ clang clang++ || echo "✅ 编译器已删除"
            
          elif [[ "${{ matrix.os }}" == *"windows"* ]]; then
            echo "删除Windows系统编译器..."
            # 删除Visual Studio
            vs_paths=(
              "/c/Program Files (x86)/Microsoft Visual Studio/2019/BuildTools"
              "/c/Program Files/Microsoft Visual Studio/2022/Community"
              "/c/Program Files/Microsoft Visual Studio/2022/BuildTools"
            )
            for path in "${vs_paths[@]}"; do
              if [ -d "$path" ]; then
                rm -rf "$path" 2>/dev/null || true
              fi
            done
            # 删除LLVM
            llvm_paths=(
              "/c/Program Files/LLVM"
              "/c/Program Files (x86)/LLVM"
            )
            for path in "${llvm_paths[@]}"; do
              if [ -d "$path" ]; then
                rm -rf "$path" 2>/dev/null || true
              fi
            done
            echo "验证删除："
            command -v clang gcc 2>/dev/null || echo "✅ 编译器已删除"
          fi
          
          echo "============================="
        shell: bash

      - name: Compile TypeScript
        run: npm run compile

      - name: Run tests
        run: |
          if command -v xvfb-run &> /dev/null; then
            xvfb-run -a npm test
          else
            npm test
          fi
        shell: bash
        env:
          CI: true

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.os }}
          path: test-output.log
          retention-days: 7
