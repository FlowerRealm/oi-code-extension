name: Docker - Dockerfile 变更构建

on:
  push:
    paths:
      - 'Dockerfile'
      - 'Dockerfile.windows.*'
      - '.github/workflows/docker-build.yml'
  pull_request:
    paths:
      - 'Dockerfile'
      - 'Dockerfile.windows.*'
      - '.github/workflows/docker-build.yml'
  workflow_dispatch:
    inputs:
      target_platform:
        description: '目标平台'
        required: true
        default: 'all'
        type: choice
        options:
          - linux
          - windows
          - all

jobs:
  docker-build:
    runs-on: ${{ matrix.os }}
    environment: check
    strategy:
      matrix:
        include:
          - platform: linux
            os: ubuntu-latest
          - platform: windows
            os: windows-latest
      fail-fast: false
      max-parallel: 2

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        if: matrix.platform == 'linux'
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU for cross-platform
        if: matrix.platform == 'linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: flowerrealm
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get version for tagging
        id: meta
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let version = 'latest';
            try {
              const pkg = JSON.parse(fs.readFileSync('package.json', 'utf8'));
              if (pkg && pkg.version) version = pkg.version;
            } catch (e) {
              console.log('Error reading package.json:', e.message);
            }
            core.setOutput('version', version);
            core.exportVariable('PKG_VERSION', version);
            core.info(`📦 获取版本: ${version}`);

      - name: 💚 Build and push Linux images
        if: matrix.platform == 'linux'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            flowerrealm/oi-code-clang:latest
            flowerrealm/oi-code-clang:v${{ env.PKG_VERSION }}
            flowerrealm/oi-code-clang:${{ github.sha }}

      - name: 🪟 Build and push Windows AMD64 images
        if: matrix.platform == 'windows'
        shell: cmd
        run: |
          REM 禁用 BuildKit 以避免版本兼容性问题
          set DOCKER_BUILDKIT=0
          set DOCKER_CLI_EXPERIMENTAL=disabled

          REM 使用 process 隔离模式构建
          docker build --isolation=process -t flowerrealm/oi-code-clang:latest-win -f Dockerfile.windows.amd64 .
          if %errorlevel% neq 0 exit /b %errorlevel%

          docker build --isolation=process -t flowerrealm/oi-code-clang:v%PKG_VERSION%-win -f Dockerfile.windows.amd64 .
          if %errorlevel% neq 0 exit /b %errorlevel%

          docker build --isolation=process -t flowerrealm/oi-code-clang:${{ github.sha }}-win -f Dockerfile.windows.amd64 .
          if %errorlevel% neq 0 exit /b %errorlevel%

          REM 推送镜像
          docker push flowerrealm/oi-code-clang:latest-win
          docker push flowerrealm/oi-code-clang:v%PKG_VERSION%-win
          docker push flowerrealm/oi-code-clang:${{ github.sha }}-win

