name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest, macos-13, windows-11-arm, ubuntu-24.04-arm]
    runs-on: ${{ matrix.os }}
    environment:
      name: check
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: |
          if command -v xvfb-run &> /dev/null; then
            xvfb-run -a npm test
          else
            npm test
          fi
        shell: bash

  # 🔧 新增Docker发布任务 - 只在main分支合并时运行
  deploy-docker:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm ci

      - name: Compile application
        run: npm run compile

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: flowerrealm
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: flowerrealm/oi-code-clang:latest
          cache-from: type=registry,ref=flowerrealm/oi-code-clang:buildcache
          cache-to: type=registry,ref=flowerrealm/oi-code-clang:buildcache,mode=max

      - name: Get version tag
        id: version
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Tag with version
        run: |
          docker tag flowerrealm/oi-code-clang:latest flowerrealm/oi-code-clang:v${{ steps.version.outputs.version }}
          docker push flowerrealm/oi-code-clang:v${{ steps.version.outputs.version }}

      - name: Notify deployment
        run: |
          echo "🚀 Docker镜像发布成功!"
          echo "📦 最新镜像: flowerrealm/oi-code-clang:latest"
          echo "🔖 版本镜像: flowerrealm/oi-code-clang:v${{ steps.version.outputs.version }}"
