{
  "name": "oi-code",
  "displayName": "OI-Code",
  "description": "OI/ACM 竞赛编程助手",
  "version": "0.0.1",
  "publisher": "FlowerRealm",
  "repository": {
    "type": "git",
    "url": "https://github.com/FlowerRealm/oi-code-extension.git"
  },
  "engines": {
    "vscode": "^1.80.0"
  },
  "categories": [
    "Other"
  ],
  "main": "./out/extension.js",
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "commands": [
      {
        "command": "oi-code.showWelcomePage",
        "title": "OI-Code: 重新初始化"
      },
      {
        "command": "oicode.createProblem",
        "title": "OI-Code: 新建题目"
      },
      {
        "command": "oi-code.showSettingsPage",
        "title": "OI-Code: 打开设置IDE"
      },
      {
        "command": "oicode.startPairCheck",
        "title": "OI-Code: 对拍"
      },
      {
        "command": "oicode.runCode",
        "title": "OI-Code: 运行"
      },
      {
        "command": "oicode.setupCompiler",
        "title": "OI-Code: 设置编译器"
      },
      {
        "command": "oicode.initializeEnvironment",
        "title": "OI-Code: 初始化编译环境"
      },
      {
        "command": "oicode.rescanCompilers",
        "title": "OI-Code: 重新扫描编译器"
      },
      {
        "command": "oicode.deepScanCompilers",
        "title": "OI-Code: 深度扫描编译器"
      }
    ],
    "menus": {},
    "viewsContainers": {
      "activitybar": [
        {
          "id": "oicode-activity",
          "title": "OI-Code",
          "icon": "webview/icons/beaker.svg"
        }
      ],
      "panel": [
        {
          "id": "oicode-panel",
          "title": "OI-Code",
          "icon": "webview/icons/beaker.svg"
        }
      ]
    },
    "views": {
      "oicode-activity": [
        {
          "id": "oicode.problemView",
          "name": "题目",
          "icon": "webview/icons/beaker.svg"
        }
      ],
      "oicode-panel": [
        {
          "id": "oicode.pairCheckView",
          "name": "对拍",
          "icon": "webview/icons/beaker.svg"
        }
      ]
    },
    "configuration": {
      "title": "OI-Code Configuration",
      "properties": {
        "oicode.compile.opt": {
          "type": "string",
          "enum": [
            "O0",
            "O1",
            "O2",
            "O3"
          ],
          "default": "O2",
          "description": "默认优化等级，会在 C/C++ 编译命令中注入/覆盖 -O?。"
        },
        "oicode.compile.std": {
          "type": "string",
          "enum": [
            "c++23",
            "c++20",
            "c++17",
            "c++14",
            "c++11",
            "c11",
            "c99"
          ],
          "default": "c++17",
          "description": "默认语言标准，会在 C/C++ 编译命令中注入/覆盖 -std=...。"
        },
        "oicode.compile.autoDowngradeClang20": {
          "type": "boolean",
          "default": true,
          "description": "是否自动降级 Clang 20+ 的 C++17 标准到 C++14 以避免兼容性问题。设置为 false 可禁用此行为。"
        },
        "oicode.compile.disableStackProtector": {
          "type": "boolean",
          "default": false,
          "description": "在 Windows 上禁用堆栈保护器 (-fno-stack-protector)。这可能提供轻微的性能提升，但会降低安全性。仅在竞技编程环境中启用。"
        },
        "oicode.run.timeLimit": {
          "type": "number",
          "default": 5,
          "description": "程序运行的最大时间限制（秒）。"
        },
        "oicode.run.memoryLimit": {
          "type": "number",
          "default": 256,
          "description": "程序运行的最大内存限制（MB）。"
        },
        "oicode.run.autoOpenOutput": {
          "type": "boolean",
          "default": true,
          "description": "运行代码后自动显示输出面板。"
        },
        "oicode.run.autoCleanup": {
          "type": "boolean",
          "default": true,
          "description": "运行完成后自动删除临时文件。"
        },
        "oicode.debug.includeDebugInfo": {
          "type": "boolean",
          "default": false,
          "description": "编译时添加调试信息（-g 标志）。"
        },
        "oicode.debug.verboseErrors": {
          "type": "boolean",
          "default": true,
          "description": "运行时显示详细的错误信息和堆栈跟踪。"
        },
        "oicode.debug.saveTestCases": {
          "type": "boolean",
          "default": true,
          "description": "自动保存运行过的测试用例供后续使用。"
        },
        "oicode.debug.debugLevel": {
          "type": "string",
          "enum": [
            "g0",
            "g1",
            "g2",
            "g3"
          ],
          "default": "g1",
          "description": "调试信息的详细程度（g0=无，g3=最详细）。"
        },
        "oicode.debug.addressSanitizer": {
          "type": "boolean",
          "default": false,
          "description": "启用AddressSanitizer检测内存错误。"
        },
        "oicode.debug.memorySanitizer": {
          "type": "boolean",
          "default": false,
          "description": "启用MemorySanitizer检测未初始化内存访问。"
        },
        "oicode.debug.ubSanitizer": {
          "type": "boolean",
          "default": false,
          "description": "启用UndefinedBehaviorSanitizer检测未定义行为。"
        },
        "oicode.debug.stackProtector": {
          "type": "string",
          "enum": [
            "无",
            "基本",
            "全部",
            "严格"
          ],
          "default": "基本",
          "description": "栈保护级别。"
        },
        "oi-code.language.c.Command": {
          "type": "string",
          "description": "Path to the C compiler (e.g., /usr/bin/gcc)."
        },
        "oi-code.language.c.Args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Arguments for the C compiler (e.g., -Wall -O2 -std=c11)."
        },
        "oi-code.language.cpp.Command": {
          "type": "string",
          "description": "Path to the C++ compiler (e.g., /usr/bin/g++)."
        },
        "oi-code.language.cpp.Args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Arguments for the C++ compiler (e.g., -Wall -O2 -std=c++17)."
        },
        "oicode.language.c.command": {
          "type": "string",
          "description": "Path to the C compiler (e.g., /usr/bin/gcc)."
        },
        "oicode.language.c.args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Arguments for the C compiler (e.g., -Wall -O2 -std=c11)."
        },
        "oicode.language.cpp.command": {
          "type": "string",
          "description": "Path to the C++ compiler (e.g., /usr/bin/g++)."
        },
        "oicode.language.cpp.args": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Arguments for the C++ compiler (e.g., -Wall -O2 -std=c++17)."
        },
        "oicode.warnings.level": {
          "type": "string",
          "enum": [
            "无",
            "普通",
            "详细",
            "最严格"
          ],
          "default": "普通",
          "description": "编译器警告级别。"
        },
        "oicode.warnings.treatAsError": {
          "type": "boolean",
          "default": false,
          "description": "将所有警告当作错误处理。"
        },
        "oicode.warnings.extra": {
          "type": "boolean",
          "default": true,
          "description": "显示额外的有用警告信息。"
        },
        "oicode.warnings.unusedParams": {
          "type": "boolean",
          "default": true,
          "description": "警告未使用的函数参数。"
        },
        "oicode.warnings.unusedVars": {
          "type": "boolean",
          "default": true,
          "description": "警告未使用的变量。"
        },
        "oicode.warnings.formatSecurity": {
          "type": "boolean",
          "default": true,
          "description": "警告printf/scanf等格式字符串安全问题。"
        },
        "oicode.warnings.conversion": {
          "type": "boolean",
          "default": true,
          "description": "警告可能的类型转换问题。"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack --mode development",
    "watch": "webpack --watch --mode development",
    "package": "webpack --mode production --devtool hidden-source-map",
    "lint": "eslint src",
    "lint:fix": "eslint src --fix",
    "format": "prettier --write 'src/**/*.{ts,js}'",
    "format:check": "prettier --check 'src/**/*.{ts,js}'",
    "test": "npm run compile && tsc -p ./src/test/tsconfig.json && node ./out/test/runTest.js",
    "test:log": "npm test > test-output.log 2>&1",
    "prepare": "husky"
  },
  "dependencies": {
    "@types/archiver": "^6.0.3",
    "archiver": "^7.0.1",
    "tar": "^6.2.0",
    "unzipper": "^0.10.14"
  },
  "devDependencies": {
    "@types/diff": "^5.0.9",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "16.x",
    "@types/tar": "^6.1.12",
    "@types/unzipper": "^0.10.8",
    "@types/vscode": "^1.80.0",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "@vscode/test-electron": "^2.3.4",
    "copy-webpack-plugin": "^13.0.0",
    "diff": "^5.2.0",
    "eslint": "^8.47.0",
    "eslint-config-prettier": "^9.1.2",
    "eslint-plugin-prettier": "^5.5.4",
    "glob": "^11.0.3",
    "husky": "^9.1.7",
    "lint-staged": "^16.1.6",
    "mocha": "^11.7.1",
    "prettier": "^3.6.2",
    "rimraf": "^6.0.1",
    "ts-loader": "^9.4.4",
    "typescript": "^5.1.6",
    "webpack": "^5.88.2",
    "webpack-cli": "^5.1.4"
  },
  "lint-staged": {
    "src/**/*.{ts,js}": [
      "prettier --write",
      "eslint --fix"
    ]
  }
}
